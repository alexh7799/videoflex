services:

  db:
    image: postgres:latest
    container_name: videoflix_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: videoflix_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    restart: unless-stopped
    container_name: videoflix_backend
    volumes:
      - .:/app
      - videoflix_media:/app/media
      - ./static:/app/static
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:latest
    container_name: videoflix_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/vps.xn--alexander-hrst-5pb.de/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/vps.xn--alexander-hrst-5pb.de/privkey.pem:/etc/nginx/certs/privkey.pem:ro
      - ./static:/app/static
      - videoflix_media:/app/media
    depends_on:
      - web


volumes:
  postgres_data:
  redis_data:
  videoflix_media:
  videoflix_static:
